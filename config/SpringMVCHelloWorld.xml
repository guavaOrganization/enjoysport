<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 
		Handler Mapping：
		HandlerMapping的基本功能是将请求传递到HandlerExecutionChain上。
		首先，这个HandlerExecutionChain必须包含一个能处理该请求的处理器。
		其次，这个链也可以包含一系列可以拦截请求的拦截器。DispatcherServlet将请求讲给处理器映射，让它检查请求并找到一个合适的HandlerExecutionChain。
		然后，DispatcherServlet执行定义在链中的处理器和拦截器（Interceptor）。
		
		BeanNameUrlHandlerMapping是一个简单但很强大的处理器映射，它将收到的Http请求映射到bean的名称。
		
		注意：
		要使用BeanNameUrlHandlerMapping，无须在Web应用上下文中定义它，缺省情况下，如果在上下文中没有找到处理器映射，DispatcherServlet会为你创建一个BeanNameUrlHandlerMapping
	 -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
	
	<!-- 
		SimpleControllerHandlerAdapter：
		表示所有实现了org.springframework.web.servlet.mvc.Controller接口的Bean可以作为Spring Web MVC中的处理器。
		如果需要其他类型的处理器可以通过实现HadlerAdapter来解决。
	 -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
	
	<!-- 
		视图与视图解析
		ViewResolver和View是Spring的视图处理方式中特别重要的两个接口。
		ViewResolver提供了从视图名称到实际视图的映射。
		View处理请求的准备工作，并将请求提交给某种具体的视图技术。
		
		InternalResourceViewResolver
		作为UrlBasedViewResolver的子类，它支持InternalResourceView（对Servlet和JSP的包装），以及其子类JstlView和TitlesView。
		
		viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包；
    	prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀），比如传进来的逻辑视图名为hello，则该该jsp视图页面应该存放在“WEB-INF/jsp/hello.jsp”
	 -->
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
	 	<property name="prefix" value="/WEB-INF/example/"></property>
	 	<property name="suffix" value=".jsp"></property>
	 </bean>
	 
	 <bean name="/hello" class="com.example.controller.HelloWorldController"></bean>
</beans>